/* ¹é²¢ + ¶þ·ÖËÑË÷ */
#include <iostream>
using namespace std;

#define MAXN 200010

typedef long long ll;

int n;
int a[MAXN];
int tmp[MAXN];
ll cnt;

int binsearch(int s, int e, int x)
{
	int l = s - 1, r = e + 1;
	x = 2 * x;
	while (r - l > 1)
	{
		int mid = (l + r) / 2;
		if (tmp[mid] <= x)
			l = mid;
		else
			r = mid;
	}
	return r - 1;
}

void merge(int s, int e, int m)
{
	for (int i = s; i <= e; i++)
		tmp[i] = a[i];
	int i = s, j = m + 1;
	int now = s;
	while (i <= m && j <= e)
	{
		if (tmp[i] <= tmp[j])
			a[now++] = tmp[i++];
		else
		{
			a[now++] = tmp[j];
			int pos = binsearch(i, m, tmp[j]);
			cnt += m - pos;
			j++;
		}
	}
	while (i <= m)
		a[now++] = tmp[i++];
	while (j <= e)
		a[now++] = tmp[j++];
}

void mergesort(int s, int e)
{
	if (s >= e)
		return;
	int mid = (s + e) / 2;
	mergesort(s, mid);
	mergesort(mid + 1, e);
	merge(s, e, mid);
}

int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%d", a + i);
	mergesort(0, n - 1);
	printf("%lld\n", cnt);
	return 0;
}