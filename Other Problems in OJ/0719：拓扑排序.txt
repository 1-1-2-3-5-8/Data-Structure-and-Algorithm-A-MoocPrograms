/**************************************
0719:拓扑排序
查看 提交 统计 提问
总时间限制: 10000ms 内存限制: 1000kB
描述
给出一个图的结构，输出其拓扑排序序列，要求在同等条件下，编号小的顶点在前

输入
若干行整数，第一行有2个数，分别为顶点数v和弧数a，接下来有a行，每一行有2个数，分别是该条弧所关联的两个顶点编号
输出
若干个空格隔开的顶点构成的序列(用小写字母)
样例输入
6 8
1 2
1 3
1 4
3 2
3 5
4 5
6 4
6 5
样例输出
v1 v3 v2 v6 v4 v5
**************************************/
#include <iostream>
#include <memory.h>
#include <vector>
using namespace std;

#define MAXN 1000

struct node
{
	int indegree;
	vector<int> outedge;
	node() :indegree(0) {}
};

int v, a;
node n[MAXN];
int topn[MAXN];
int cnt;
bool visited[MAXN];

void topsort()
{
	memset(visited, 0, sizeof(visited));
	cnt = 0;
	while (true)
	{
		int i;
		for (i = 1; i <= v; i++)
		{
			if (!visited[i] && n[i].indegree == 0)
			{
				topn[cnt++] = i;
				visited[i] = 1;
				break;
			}
		}
		if (i > v)
			break;
		int size = n[i].outedge.size();
		for (int j = 0; j < size; j++)
		{
			int end = n[i].outedge[j];
			if (!visited[end])
				n[end].indegree--;
		}
	}
}

int main()
{
	scanf("%d%d", &v, &a);
	int s, t;
	for (int i = 0; i < a; i++)
	{
		scanf("%d%d", &s, &t);
		n[t].indegree++;
		n[s].outedge.push_back(t);
	}
	topsort();
	for (int i = 0; i < v - 1; i++)
		printf("v%d ", topn[i]);
	printf("v%d\n", topn[v - 1]);
	return 0;
}
