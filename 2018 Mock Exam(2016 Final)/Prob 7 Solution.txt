/* πÈ≤¢≈≈–Ú */
#include <iostream>
using namespace std;

#define MAXN 100010

int n;
int a[MAXN];
int tmp[MAXN];
long long cnt = 0;

void merge(int s, int m, int e)
{
	for (int i = s; i <= e; i++)
		tmp[i] = a[i];
	int i = s, j = m + 1;
	int now = s;
	while (i <= m && j <= e)
	{
		if (tmp[i] <= tmp[j])
			a[now++] = tmp[i++];
		else
		{
			a[now++] = tmp[j++];
			cnt += m + 1 - i;
		}
	}
	while (i <= m)
		a[now++] = tmp[i++];
	while (j <= e)
		a[now++] = tmp[j++];
}

void mergesort(int i, int j)
{
	if (j - i < 1)
		return;
	int mid = (i + j) / 2;
	mergesort(i, mid);
	mergesort(mid + 1, j);
	merge(i, mid, j);
}

int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%d", a + i);
	mergesort(0, n - 1);
	cnt = (long long)n*(n - 1) / 2 - cnt;
	printf("%lld\n", cnt);
	return 0;
}